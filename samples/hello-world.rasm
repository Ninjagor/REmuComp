_START
  INITDISPLAY
  STRS R0, "REMU", 0xE001
  STRS R6, " VM ", 0xE100

  ; Constants
  MOVI R3, 0x0008      ; char spacing (X increment)
  MOVI R4, 0x0001      ; byte increment

  ; --- Print "HELLO" ---
  MOVI R0, 0xE001      ; pointer to "HELLO"
  MOVI R1, 0x0020      ; start X
  MOVI R2, 0x0015      ; Y
  MOVI R7, 0x0000      ; iterator
  MOVI R14, 0x0005     ; max length


  LDS R12 [0x3C 0x42 0xA5 0x81 0xA5 0x99 0x42 0x3C] 0xEF00

  MOVI R11, 0x002C
  MOVI R10, 0x002C

  SPRB R12, R10, R11

  MOVI R9, #0x0025

  SUB R11, R11, R9

  LDS R12 [0x66 0x66 0x66 0x66 0x66 0x00 0x66 0x00] 0xEF00

  SPRB R12, R10, R11

  LDS R12 [0x10 0x38 0x7C 0xFE 0x7C 0x38 0x10 0x00] 0xEF00

  MOVI R15, 0x0010
  MOVI R8,  0x0019

  SPRB R12, R15, R8

  LDS R12 [0x08 0x1C 0x3E 0x7F 0x3E 0x1C 0x08 0x00] 0xEF00

  MOVI R15, 0x0048

  SPRB R12, R15, R8


  ; Top-left corner ┌
  LDS R12 [0xFF 0x80 0x80 0x80 0x80 0x80 0x80 0x80] 0xEF00
  MOVI R10, 0x0005
  MOVI R11, 0x0005
  SPRB R12, R10, R11

  ; Top-right corner ┐
  LDS R12 [0xFF 0x01 0x01 0x01 0x01 0x01 0x01 0x01] 0xEF00
  MOVI R10, 0x0053
  SPRB R12, R10, R11

  ; Bottom-left corner └
  LDS R12 [0x80 0x80 0x80 0x80 0x80 0x80 0x80 0xFF] 0xEF00
  MOVI R11, 0x0033
  MOVI R10, 0x0005
  SPRB R12, R10, R11

  ; Bottom-right corner ┘
  LDS R12 [0x01 0x01 0x01 0x01 0x01 0x01 0x01 0xFF] 0xEF00
  MOVI R10, 0x0053
  SPRB R12, R10, R11

  JMP _LOOP_HELLO

_LOOP_HELLO
  

  LOADB R5, R0
  STRB  R5, R1, R2

  DRAW

  ADD   R0, R0, R4     ; advance string pointer
  ADD   R1, R1, R3     ; advance X
  ADD   R7, R7, R4     ; iterator++

  CMP   R7, R14
  JL    _LOOP_HELLO

  ; --- Print "WORLD" ---
  MOVI R0, 0xE100      ; pointer to "WORLD"
  MOVI R1, 0x0020      ; reset X
  ADD   R2, R2, R3     ; move Y down by one line
  MOVI R7, 0x0000      ; reset iterator

_LOOP_WORLD
  LOADB R5, R0
  STRB  R5, R1, R2

  DRAW

  ADD   R0, R0, R4
  ADD   R1, R1, R3
  ADD   R7, R7, R4

  CMP   R7, R14
  JL    _LOOP_WORLD

_END
  DRAW
  JMP _END
